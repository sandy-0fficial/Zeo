{"ast":null,"code":"\n// import { useState } from \"react\";\n\n// const Dashboard = () => {\n//   const [activeTab, setActiveTab] = useState(\"create\");\n//   const [rules, setRules] = useState([]);\n//   const [selectedRules, setSelectedRules] = useState([]);\n//   const [rule, setRule] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const fetchRules = () => {\n//     fetch(\"http://localhost:5556/getRules\")\n//       .then((response) => response.json())\n//       .then((rulesArray) => {\n//         setRules(rulesArray);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching rules:\", error);\n//       });\n//   };\n\n//   const handleRuleSelection = (rule) => {\n//     if (selectedRules.includes(rule)) {\n//       setSelectedRules(selectedRules.filter((r) => r !== rule));\n//     } else {\n//       setSelectedRules([...selectedRules, rule]);\n//     }\n//   };\n\n//   const handleCombineRules = () => {\n//     console.log(\"Combining rules:\", selectedRules);\n//     alert(\"Rules combined successfully!\");\n//   };\n\n//   const validateRule = () => {\n//     let valid = true;\n//     let errorMessage = \"\";\n\n//     if (rule.trim() === \"\") {\n//       valid = false;\n//       errorMessage = \"Rule cannot be empty.\";\n//     } else if (rule.length < 50) {\n//       valid = false;\n//       errorMessage = \"Rule must be at least 50 characters long.\";\n//     } else if (!/AND|OR/.test(rule)) {\n//       valid = false;\n//       errorMessage = \"Rule must contain at least one 'AND' or 'OR' operator.\";\n//     }\n\n//     if (!valid) {\n//       setError(errorMessage);\n//     } else {\n//       setError(\"\");\n//       submitRule();\n//     }\n//   };\n\n//   const submitRule = () => {\n//     const url = \"http://localhost:5556/submitRule\";\n//     const newRule = {\n//       rule: rule,\n//     };\n\n//     const postdata = {\n//       headers: { \"Content-type\": \"application/json\" },\n//       method: \"POST\",\n//       body: JSON.stringify(newRule),\n//     };\n\n//     fetch(url, postdata)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         alert(\"Rule Added Successfully!\");\n//         setRule(\"\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Error submitting rule:\", error);\n//       });\n//   };\n\n//   return (\n//     <section>\n//       <div className=\"container\">\n//         <div className=\"row mt-5\">\n//           <div className=\"col-lg-12 text-center fs-1 fw-bold text-dark\">\n//             Rules & Eligibility\n//           </div>\n//         </div>\n//         <div className=\"row\">\n//           <div className=\"col-lg-12 p-5 text-center\">\n//             <div className=\"btn-group\">\n//               <button\n//                 className={`btn btn-outline-dark fw-bold ${activeTab === \"create\" ? \"active\" : \"\"}`}\n//                 onClick={() => setActiveTab(\"create\")}\n//               >\n//                 Create Rule\n//               </button>\n//               <button\n//                 className={`btn btn-outline-dark fw-bold ${activeTab === \"combine\" ? \"active\" : \"\"}`}\n//                 onClick={() => {\n//                   setActiveTab(\"combine\");\n//                   fetchRules();\n//                 }}\n//               >\n//                 Combine Rules\n//               </button>\n//               <button\n//                 className={`btn btn-outline-dark fw-bold ${activeTab === \"evaluate\" ? \"active\" : \"\"}`}\n//                 onClick={() => setActiveTab(\"evaluate\")}\n//               >\n//                 Evaluate Rules\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"row mb-5\">\n//           <div className=\"container p-5 feedback-box\">\n//             <div className=\"row\">\n//               <h3 className=\"text-center\">\n//                 {activeTab === \"create\" && \"Create Rule\"}\n//                 {activeTab === \"combine\" && \"Combine Rules\"}\n//                 {activeTab === \"evaluate\" && \"Evaluate Rules\"}\n//               </h3>\n//             </div>\n\n//             <div className=\"row\">\n//               <div className=\"col-lg-3\"></div>\n//               <div className=\"col-lg-6\">\n//                 {activeTab === \"create\" && (\n//                   <form>\n//                     <textarea\n//                       className={`form-control  ${error ? \"is-invalid\" : \"\"}`}\n//                       placeholder=\"Enter Rule\"\n//                       value={rule}\n//                       onChange={(e) => setRule(e.target.value)}\n//                       style={{ borderColor: error ? \"red\" : \"\" }}\n//                     ></textarea>\n//                     {error && <small className=\"text-danger fst-italic bg-3\"><i>{error}</i></small>}\n//                     <div className='text-center'>\n//                     <button\n//                       type=\"button\"\n//                       className=\"btn btn-primary mt-3 bg-dark\"\n//                       onClick={validateRule}\n//                     >\n//                       Create Rule\n//                     </button>\n//                     </div>\n//                   </form>\n//                 )}\n\n//                 {activeTab === \"combine\" && (\n//                   <div>\n//                     {rules.length > 0 ? (\n//                       <form>\n//                         {rules.map((rule, index) => (\n//                           <div key={index} className=\"form-check\">\n//                             <input\n//                               className=\"form-check-input\"\n//                               type=\"checkbox\"\n//                               value={rule}\n//                               onChange={() => handleRuleSelection(rule)}\n//                             />\n//                             <label className=\"form-check-label\">\n//                               {rule}\n//                             </label>\n//                           </div>\n//                         ))}\n//                         <button\n//                           type=\"button\"\n//                           className=\"btn btn-primary mt-3\"\n//                           onClick={handleCombineRules}\n//                         >\n//                           Combine Selected Rules\n//                         </button>\n//                       </form>\n//                     ) : (\n//                       <p>No rules available. Click the button to fetch rules.</p>\n//                     )}\n//                   </div>\n//                 )}\n\n//                 {activeTab === \"evaluate\" && (\n//                   <form>\n//                     <textarea className=\"form-control mb-3\" placeholder=\"Enter Data to Evaluate\"></textarea>\n//                     <button type=\"submit\" className=\"btn btn-primary\">Evaluate Rule</button>\n//                   </form>\n//                 )}\n//               </div>\n//               <div className=\"col-lg-3\"></div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </section>\n//   );\n// };\n\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["C:/Users/ashut/Desktop/feedback_portal - Copy/reactapp/src/Dashboard.js"],"sourcesContent":["\r\n// import { useState } from \"react\";\r\n\r\n// const Dashboard = () => {\r\n//   const [activeTab, setActiveTab] = useState(\"create\");\r\n//   const [rules, setRules] = useState([]);\r\n//   const [selectedRules, setSelectedRules] = useState([]);\r\n//   const [rule, setRule] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const fetchRules = () => {\r\n//     fetch(\"http://localhost:5556/getRules\")\r\n//       .then((response) => response.json())\r\n//       .then((rulesArray) => {\r\n//         setRules(rulesArray);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error fetching rules:\", error);\r\n//       });\r\n//   };\r\n\r\n//   const handleRuleSelection = (rule) => {\r\n//     if (selectedRules.includes(rule)) {\r\n//       setSelectedRules(selectedRules.filter((r) => r !== rule));\r\n//     } else {\r\n//       setSelectedRules([...selectedRules, rule]);\r\n//     }\r\n//   };\r\n\r\n//   const handleCombineRules = () => {\r\n//     console.log(\"Combining rules:\", selectedRules);\r\n//     alert(\"Rules combined successfully!\");\r\n//   };\r\n\r\n//   const validateRule = () => {\r\n//     let valid = true;\r\n//     let errorMessage = \"\";\r\n\r\n//     if (rule.trim() === \"\") {\r\n//       valid = false;\r\n//       errorMessage = \"Rule cannot be empty.\";\r\n//     } else if (rule.length < 50) {\r\n//       valid = false;\r\n//       errorMessage = \"Rule must be at least 50 characters long.\";\r\n//     } else if (!/AND|OR/.test(rule)) {\r\n//       valid = false;\r\n//       errorMessage = \"Rule must contain at least one 'AND' or 'OR' operator.\";\r\n//     }\r\n\r\n//     if (!valid) {\r\n//       setError(errorMessage);\r\n//     } else {\r\n//       setError(\"\");\r\n//       submitRule();\r\n//     }\r\n//   };\r\n\r\n//   const submitRule = () => {\r\n//     const url = \"http://localhost:5556/submitRule\";\r\n//     const newRule = {\r\n//       rule: rule,\r\n//     };\r\n\r\n//     const postdata = {\r\n//       headers: { \"Content-type\": \"application/json\" },\r\n//       method: \"POST\",\r\n//       body: JSON.stringify(newRule),\r\n//     };\r\n\r\n//     fetch(url, postdata)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         alert(\"Rule Added Successfully!\");\r\n//         setRule(\"\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error submitting rule:\", error);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <section>\r\n//       <div className=\"container\">\r\n//         <div className=\"row mt-5\">\r\n//           <div className=\"col-lg-12 text-center fs-1 fw-bold text-dark\">\r\n//             Rules & Eligibility\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"row\">\r\n//           <div className=\"col-lg-12 p-5 text-center\">\r\n//             <div className=\"btn-group\">\r\n//               <button\r\n//                 className={`btn btn-outline-dark fw-bold ${activeTab === \"create\" ? \"active\" : \"\"}`}\r\n//                 onClick={() => setActiveTab(\"create\")}\r\n//               >\r\n//                 Create Rule\r\n//               </button>\r\n//               <button\r\n//                 className={`btn btn-outline-dark fw-bold ${activeTab === \"combine\" ? \"active\" : \"\"}`}\r\n//                 onClick={() => {\r\n//                   setActiveTab(\"combine\");\r\n//                   fetchRules();\r\n//                 }}\r\n//               >\r\n//                 Combine Rules\r\n//               </button>\r\n//               <button\r\n//                 className={`btn btn-outline-dark fw-bold ${activeTab === \"evaluate\" ? \"active\" : \"\"}`}\r\n//                 onClick={() => setActiveTab(\"evaluate\")}\r\n//               >\r\n//                 Evaluate Rules\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"row mb-5\">\r\n//           <div className=\"container p-5 feedback-box\">\r\n//             <div className=\"row\">\r\n//               <h3 className=\"text-center\">\r\n//                 {activeTab === \"create\" && \"Create Rule\"}\r\n//                 {activeTab === \"combine\" && \"Combine Rules\"}\r\n//                 {activeTab === \"evaluate\" && \"Evaluate Rules\"}\r\n//               </h3>\r\n//             </div>\r\n\r\n//             <div className=\"row\">\r\n//               <div className=\"col-lg-3\"></div>\r\n//               <div className=\"col-lg-6\">\r\n//                 {activeTab === \"create\" && (\r\n//                   <form>\r\n//                     <textarea\r\n//                       className={`form-control  ${error ? \"is-invalid\" : \"\"}`}\r\n//                       placeholder=\"Enter Rule\"\r\n//                       value={rule}\r\n//                       onChange={(e) => setRule(e.target.value)}\r\n//                       style={{ borderColor: error ? \"red\" : \"\" }}\r\n//                     ></textarea>\r\n//                     {error && <small className=\"text-danger fst-italic bg-3\"><i>{error}</i></small>}\r\n//                     <div className='text-center'>\r\n//                     <button\r\n//                       type=\"button\"\r\n//                       className=\"btn btn-primary mt-3 bg-dark\"\r\n//                       onClick={validateRule}\r\n//                     >\r\n//                       Create Rule\r\n//                     </button>\r\n//                     </div>\r\n//                   </form>\r\n//                 )}\r\n\r\n//                 {activeTab === \"combine\" && (\r\n//                   <div>\r\n//                     {rules.length > 0 ? (\r\n//                       <form>\r\n//                         {rules.map((rule, index) => (\r\n//                           <div key={index} className=\"form-check\">\r\n//                             <input\r\n//                               className=\"form-check-input\"\r\n//                               type=\"checkbox\"\r\n//                               value={rule}\r\n//                               onChange={() => handleRuleSelection(rule)}\r\n//                             />\r\n//                             <label className=\"form-check-label\">\r\n//                               {rule}\r\n//                             </label>\r\n//                           </div>\r\n//                         ))}\r\n//                         <button\r\n//                           type=\"button\"\r\n//                           className=\"btn btn-primary mt-3\"\r\n//                           onClick={handleCombineRules}\r\n//                         >\r\n//                           Combine Selected Rules\r\n//                         </button>\r\n//                       </form>\r\n//                     ) : (\r\n//                       <p>No rules available. Click the button to fetch rules.</p>\r\n//                     )}\r\n//                   </div>\r\n//                 )}\r\n\r\n//                 {activeTab === \"evaluate\" && (\r\n//                   <form>\r\n//                     <textarea className=\"form-control mb-3\" placeholder=\"Enter Data to Evaluate\"></textarea>\r\n//                     <button type=\"submit\" className=\"btn btn-primary\">Evaluate Rule</button>\r\n//                   </form>\r\n//                 )}\r\n//               </div>\r\n//               <div className=\"col-lg-3\"></div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}