{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashut\\\\Desktop\\\\feedback_portal - Copy\\\\reactapp\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n\n// const Dashboard = () => {\n//   const [activeTab, setActiveTab] = useState(\"create\");\n//   const [rules, setRules] = useState([]);\n//   const [selectedRules, setSelectedRules] = useState([]);\n//   const [rule, setRule] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const fetchRules = () => {\n//     fetch(\"http://localhost:5556/getRules\")\n//       .then((response) => response.json())\n//       .then((rulesArray) => {\n//         setRules(rulesArray);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching rules:\", error);\n//       });\n//   };\n\n//   const handleRuleSelection = (rule) => {\n//     if (selectedRules.includes(rule)) {\n//       setSelectedRules(selectedRules.filter((r) => r !== rule));\n//     } else {\n//       setSelectedRules([...selectedRules, rule]);\n//     }\n//   };\n\n//   const handleCombineRules = () => {\n//     console.log(\"Combining rules:\", selectedRules);\n//     alert(\"Rules combined successfully!\");\n//   };\n\n//   const validateRule = () => {\n//     let valid = true;\n//     let errorMessage = \"\";\n\n//     if (rule.trim() === \"\") {\n//       valid = false;\n//       errorMessage = \"Rule cannot be empty.\";\n//     } else if (rule.length < 50) {\n//       valid = false;\n//       errorMessage = \"Rule must be at least 50 characters long.\";\n//     } else if (!/AND|OR/.test(rule)) {\n//       valid = false;\n//       errorMessage = \"Rule must contain at least one 'AND' or 'OR' operator.\";\n//     }\n\n//     if (!valid) {\n//       setError(errorMessage);\n//     } else {\n//       setError(\"\");\n//       submitRule();\n//     }\n//   };\n\n//   const submitRule = () => {\n//     const url = \"http://localhost:5556/submitRule\";\n//     const newRule = {\n//       rule: rule,\n//     };\n\n//     const postdata = {\n//       headers: { \"Content-type\": \"application/json\" },\n//       method: \"POST\",\n//       body: JSON.stringify(newRule),\n//     };\n\n//     fetch(url, postdata)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         alert(\"Rule Added Successfully!\");\n//         setRule(\"\");\n//       })\n//       .catch((error) => {\n//         console.error(\"Error submitting rule:\", error);\n//       });\n//   };\n\n//   return (\n//     <section>\n//       <div className=\"container\">\n//         <div className=\"row mt-5\">\n//           <div className=\"col-lg-12 text-center fs-1 fw-bold text-dark\">\n//             Rules & Eligibility\n//           </div>\n//         </div>\n//         <div className=\"row\">\n//           <div className=\"col-lg-12 p-5 text-center\">\n//             <div className=\"btn-group\">\n//               <button\n//                 className={`btn btn-outline-dark fw-bold ${activeTab === \"create\" ? \"active\" : \"\"}`}\n//                 onClick={() => setActiveTab(\"create\")}\n//               >\n//                 Create Rule\n//               </button>\n//               <button\n//                 className={`btn btn-outline-dark fw-bold ${activeTab === \"combine\" ? \"active\" : \"\"}`}\n//                 onClick={() => {\n//                   setActiveTab(\"combine\");\n//                   fetchRules();\n//                 }}\n//               >\n//                 Combine Rules\n//               </button>\n//               <button\n//                 className={`btn btn-outline-dark fw-bold ${activeTab === \"evaluate\" ? \"active\" : \"\"}`}\n//                 onClick={() => setActiveTab(\"evaluate\")}\n//               >\n//                 Evaluate Rules\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"row mb-5\">\n//           <div className=\"container p-5 feedback-box\">\n//             <div className=\"row\">\n//               <h3 className=\"text-center\">\n//                 {activeTab === \"create\" && \"Create Rule\"}\n//                 {activeTab === \"combine\" && \"Combine Rules\"}\n//                 {activeTab === \"evaluate\" && \"Evaluate Rules\"}\n//               </h3>\n//             </div>\n\n//             <div className=\"row\">\n//               <div className=\"col-lg-3\"></div>\n//               <div className=\"col-lg-6\">\n//                 {activeTab === \"create\" && (\n//                   <form>\n//                     <textarea\n//                       className={`form-control  ${error ? \"is-invalid\" : \"\"}`}\n//                       placeholder=\"Enter Rule\"\n//                       value={rule}\n//                       onChange={(e) => setRule(e.target.value)}\n//                       style={{ borderColor: error ? \"red\" : \"\" }}\n//                     ></textarea>\n//                     {error && <small className=\"text-danger fst-italic bg-3\"><i>{error}</i></small>}\n//                     <div className='text-center'>\n//                     <button\n//                       type=\"button\"\n//                       className=\"btn btn-primary mt-3 bg-dark\"\n//                       onClick={validateRule}\n//                     >\n//                       Create Rule\n//                     </button>\n//                     </div>\n//                   </form>\n//                 )}\n\n//                 {activeTab === \"combine\" && (\n//                   <div>\n//                     {rules.length > 0 ? (\n//                       <form>\n//                         {rules.map((rule, index) => (\n//                           <div key={index} className=\"form-check\">\n//                             <input\n//                               className=\"form-check-input\"\n//                               type=\"checkbox\"\n//                               value={rule}\n//                               onChange={() => handleRuleSelection(rule)}\n//                             />\n//                             <label className=\"form-check-label\">\n//                               {rule}\n//                             </label>\n//                           </div>\n//                         ))}\n//                         <button\n//                           type=\"button\"\n//                           className=\"btn btn-primary mt-3\"\n//                           onClick={handleCombineRules}\n//                         >\n//                           Combine Selected Rules\n//                         </button>\n//                       </form>\n//                     ) : (\n//                       <p>No rules available. Click the button to fetch rules.</p>\n//                     )}\n//                   </div>\n//                 )}\n\n//                 {activeTab === \"evaluate\" && (\n//                   <form>\n//                     <textarea className=\"form-control mb-3\" placeholder=\"Enter Data to Evaluate\"></textarea>\n//                     <button type=\"submit\" className=\"btn btn-primary\">Evaluate Rule</button>\n//                   </form>\n//                 )}\n//               </div>\n//               <div className=\"col-lg-3\"></div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </section>\n//   );\n// };\n\n// export default Dashboard;\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"create\");\n  const [rules, setRules] = useState([]);\n  const [selectedRules, setSelectedRules] = useState([]);\n  const [selectedRule, setSelectedRule] = useState(\"\");\n  const [rule, setRule] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  const [experience, setExperience] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const fetchRules = () => {\n    fetch(\"http://localhost:5556/getRules\").then(response => response.json()).then(rulesArray => {\n      setRules(rulesArray);\n    }).catch(error => {\n      console.error(\"Error fetching rules:\", error);\n    });\n  };\n  const handleRuleSelection = rule => {\n    if (selectedRules.includes(rule)) {\n      setSelectedRules(selectedRules.filter(r => r !== rule));\n    } else {\n      setSelectedRules([...selectedRules, rule]);\n    }\n  };\n  const handleCombineRules = () => {\n    console.log(\"Combining rules:\", selectedRules);\n    alert(\"Rules combined successfully!\");\n  };\n  const validateRule = () => {\n    let valid = true;\n    let errorMessage = \"\";\n    if (rule.trim() === \"\") {\n      valid = false;\n      errorMessage = \"Rule cannot be empty.\";\n    } else if (rule.length < 50) {\n      valid = false;\n      errorMessage = \"Rule must be at least 50 characters long.\";\n    } else if (!/AND|OR/.test(rule)) {\n      valid = false;\n      errorMessage = \"Rule must contain at least one 'AND' or 'OR' operator.\";\n    }\n    if (!valid) {\n      setError(errorMessage);\n    } else {\n      setError(\"\");\n      submitRule();\n    }\n  };\n  const submitRule = () => {\n    const url = \"http://localhost:5556/submitRule\";\n    const newRule = {\n      rule\n    };\n    const postdata = {\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      method: \"POST\",\n      body: JSON.stringify(newRule)\n    };\n    fetch(url, postdata).then(response => response.json()).then(data => {\n      alert(\"Rule Added Successfully!\");\n      setRule(\"\");\n    }).catch(error => {\n      console.error(\"Error submitting rule:\", error);\n    });\n  };\n  const handleEvaluate = () => {\n    let hasError = false;\n    if (!age || isNaN(age)) {\n      setError(\"Age must be a valid number.\");\n      hasError = true;\n    } else if (!department) {\n      setError(\"Department is required.\");\n      hasError = true;\n    } else if (!salary || isNaN(salary)) {\n      setError(\"Salary must be a valid number.\");\n      hasError = true;\n    } else if (!experience || isNaN(experience)) {\n      setError(\"Experience must be a valid number.\");\n      hasError = true;\n    } else if (!selectedRule) {\n      setError(\"Please select a rule to evaluate.\");\n      hasError = true;\n    } else {\n      setError(\"\");\n    }\n    if (!hasError) {\n      const data = {\n        age,\n        department,\n        salary,\n        experience,\n        rule: selectedRule\n      };\n      fetch(\"http://localhost:5556/evaluateRule\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(result => {\n        setOutput(result.isEligible ? \"True (User is eligible)\" : \"False (User is not eligible)\");\n      }).catch(error => {\n        console.error(\"Error evaluating rule:\", error);\n        setOutput(\"Error evaluating rule.\");\n      });\n    }\n  };\n  useEffect(() => {\n    if (activeTab === \"evaluate\") {\n      fetchRules();\n    }\n  }, [activeTab]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12 text-center fs-1 fw-bold text-dark\",\n          children: \"Rules & Eligibility\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12 p-5 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn btn-outline-dark fw-bold ${activeTab === \"create\" ? \"active\" : \"\"}`,\n              onClick: () => setActiveTab(\"create\"),\n              children: \"Create Rule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn btn-outline-dark fw-bold ${activeTab === \"combine\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setActiveTab(\"combine\");\n                fetchRules();\n              },\n              children: \"Combine Rules\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn btn-outline-dark fw-bold ${activeTab === \"evaluate\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setActiveTab(\"evaluate\");\n                fetchRules();\n              },\n              children: \"Evaluate Rules\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container p-5 feedback-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-center\",\n              children: [activeTab === \"create\" && \"Create Rule\", activeTab === \"combine\" && \"Combine Rules\", activeTab === \"evaluate\" && \"Evaluate Rules\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6\",\n              children: [activeTab === \"create\" && /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: `form-control  ${error ? \"is-invalid\" : \"\"}`,\n                  placeholder: \"Enter Rule\",\n                  value: rule,\n                  onChange: e => setRule(e.target.value),\n                  style: {\n                    borderColor: error ? \"red\" : \"\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 21\n                }, this), error && /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-danger fst-italic bg-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 78\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-primary mt-3 bg-dark\",\n                    onClick: validateRule,\n                    children: \"Create Rule\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), activeTab === \"combine\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: rules.length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n                  children: [rules.map((rule, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-check\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-check-input\",\n                      type: \"checkbox\",\n                      value: rule,\n                      onChange: () => handleRuleSelection(rule)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-check-label\",\n                      children: rule\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 27\n                  }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-primary mt-3\",\n                    onClick: handleCombineRules,\n                    children: \"Combine Selected Rules\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No rules available. Click the button to fetch rules.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this), activeTab === \"evaluate\" && /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [rules.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: rules.map((rule, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-check\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"form-check-input\",\n                      type: \"radio\",\n                      name: \"rule\",\n                      value: rule,\n                      onChange: () => setSelectedRule(rule)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"form-check-label\",\n                      children: rule\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No rules available. Click the button to fetch rules.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Age:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    value: age,\n                    onChange: e => setAge(e.target.value),\n                    style: {\n                      borderColor: error && !age ? \"red\" : \"\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Department:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: department,\n                    onChange: e => setDepartment(e.target.value),\n                    style: {\n                      borderColor: error && !department ? \"red\" : \"\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Salary:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    value: salary,\n                    onChange: e => setSalary(e.target.value),\n                    style: {\n                      borderColor: error && !salary ? \"red\" : \"\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Experience (Years):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-control\",\n                    value: experience,\n                    onChange: e => setExperience(e.target.value),\n                    style: {\n                      borderColor: error && !experience ? \"red\" : \"\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 21\n                }, this), error && /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-danger fst-italic\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 73\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-primary mt-3 bg-dark\",\n                    onClick: handleEvaluate,\n                    children: \"Evaluate Rule\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 21\n                }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-info mt-3\",\n                  role: \"alert\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Evaluation Result:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 25\n                  }, this), \" \", output]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"F1RjR9mChAZMAvVU7EUwdN5lLfs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","activeTab","setActiveTab","rules","setRules","selectedRules","setSelectedRules","selectedRule","setSelectedRule","rule","setRule","age","setAge","department","setDepartment","salary","setSalary","experience","setExperience","error","setError","output","setOutput","fetchRules","fetch","then","response","json","rulesArray","catch","console","handleRuleSelection","includes","filter","r","handleCombineRules","log","alert","validateRule","valid","errorMessage","trim","length","test","submitRule","url","newRule","postdata","headers","method","body","JSON","stringify","data","handleEvaluate","hasError","isNaN","result","isEligible","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","e","target","style","borderColor","type","map","index","name","role","_c","$RefreshReg$"],"sources":["C:/Users/ashut/Desktop/feedback_portal - Copy/reactapp/src/Dashboard.js"],"sourcesContent":["\r\n// import { useState } from \"react\";\r\n\r\n// const Dashboard = () => {\r\n//   const [activeTab, setActiveTab] = useState(\"create\");\r\n//   const [rules, setRules] = useState([]);\r\n//   const [selectedRules, setSelectedRules] = useState([]);\r\n//   const [rule, setRule] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const fetchRules = () => {\r\n//     fetch(\"http://localhost:5556/getRules\")\r\n//       .then((response) => response.json())\r\n//       .then((rulesArray) => {\r\n//         setRules(rulesArray);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error fetching rules:\", error);\r\n//       });\r\n//   };\r\n\r\n//   const handleRuleSelection = (rule) => {\r\n//     if (selectedRules.includes(rule)) {\r\n//       setSelectedRules(selectedRules.filter((r) => r !== rule));\r\n//     } else {\r\n//       setSelectedRules([...selectedRules, rule]);\r\n//     }\r\n//   };\r\n\r\n//   const handleCombineRules = () => {\r\n//     console.log(\"Combining rules:\", selectedRules);\r\n//     alert(\"Rules combined successfully!\");\r\n//   };\r\n\r\n//   const validateRule = () => {\r\n//     let valid = true;\r\n//     let errorMessage = \"\";\r\n\r\n//     if (rule.trim() === \"\") {\r\n//       valid = false;\r\n//       errorMessage = \"Rule cannot be empty.\";\r\n//     } else if (rule.length < 50) {\r\n//       valid = false;\r\n//       errorMessage = \"Rule must be at least 50 characters long.\";\r\n//     } else if (!/AND|OR/.test(rule)) {\r\n//       valid = false;\r\n//       errorMessage = \"Rule must contain at least one 'AND' or 'OR' operator.\";\r\n//     }\r\n\r\n//     if (!valid) {\r\n//       setError(errorMessage);\r\n//     } else {\r\n//       setError(\"\");\r\n//       submitRule();\r\n//     }\r\n//   };\r\n\r\n//   const submitRule = () => {\r\n//     const url = \"http://localhost:5556/submitRule\";\r\n//     const newRule = {\r\n//       rule: rule,\r\n//     };\r\n\r\n//     const postdata = {\r\n//       headers: { \"Content-type\": \"application/json\" },\r\n//       method: \"POST\",\r\n//       body: JSON.stringify(newRule),\r\n//     };\r\n\r\n//     fetch(url, postdata)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         alert(\"Rule Added Successfully!\");\r\n//         setRule(\"\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error submitting rule:\", error);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <section>\r\n//       <div className=\"container\">\r\n//         <div className=\"row mt-5\">\r\n//           <div className=\"col-lg-12 text-center fs-1 fw-bold text-dark\">\r\n//             Rules & Eligibility\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"row\">\r\n//           <div className=\"col-lg-12 p-5 text-center\">\r\n//             <div className=\"btn-group\">\r\n//               <button\r\n//                 className={`btn btn-outline-dark fw-bold ${activeTab === \"create\" ? \"active\" : \"\"}`}\r\n//                 onClick={() => setActiveTab(\"create\")}\r\n//               >\r\n//                 Create Rule\r\n//               </button>\r\n//               <button\r\n//                 className={`btn btn-outline-dark fw-bold ${activeTab === \"combine\" ? \"active\" : \"\"}`}\r\n//                 onClick={() => {\r\n//                   setActiveTab(\"combine\");\r\n//                   fetchRules();\r\n//                 }}\r\n//               >\r\n//                 Combine Rules\r\n//               </button>\r\n//               <button\r\n//                 className={`btn btn-outline-dark fw-bold ${activeTab === \"evaluate\" ? \"active\" : \"\"}`}\r\n//                 onClick={() => setActiveTab(\"evaluate\")}\r\n//               >\r\n//                 Evaluate Rules\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"row mb-5\">\r\n//           <div className=\"container p-5 feedback-box\">\r\n//             <div className=\"row\">\r\n//               <h3 className=\"text-center\">\r\n//                 {activeTab === \"create\" && \"Create Rule\"}\r\n//                 {activeTab === \"combine\" && \"Combine Rules\"}\r\n//                 {activeTab === \"evaluate\" && \"Evaluate Rules\"}\r\n//               </h3>\r\n//             </div>\r\n\r\n//             <div className=\"row\">\r\n//               <div className=\"col-lg-3\"></div>\r\n//               <div className=\"col-lg-6\">\r\n//                 {activeTab === \"create\" && (\r\n//                   <form>\r\n//                     <textarea\r\n//                       className={`form-control  ${error ? \"is-invalid\" : \"\"}`}\r\n//                       placeholder=\"Enter Rule\"\r\n//                       value={rule}\r\n//                       onChange={(e) => setRule(e.target.value)}\r\n//                       style={{ borderColor: error ? \"red\" : \"\" }}\r\n//                     ></textarea>\r\n//                     {error && <small className=\"text-danger fst-italic bg-3\"><i>{error}</i></small>}\r\n//                     <div className='text-center'>\r\n//                     <button\r\n//                       type=\"button\"\r\n//                       className=\"btn btn-primary mt-3 bg-dark\"\r\n//                       onClick={validateRule}\r\n//                     >\r\n//                       Create Rule\r\n//                     </button>\r\n//                     </div>\r\n//                   </form>\r\n//                 )}\r\n\r\n//                 {activeTab === \"combine\" && (\r\n//                   <div>\r\n//                     {rules.length > 0 ? (\r\n//                       <form>\r\n//                         {rules.map((rule, index) => (\r\n//                           <div key={index} className=\"form-check\">\r\n//                             <input\r\n//                               className=\"form-check-input\"\r\n//                               type=\"checkbox\"\r\n//                               value={rule}\r\n//                               onChange={() => handleRuleSelection(rule)}\r\n//                             />\r\n//                             <label className=\"form-check-label\">\r\n//                               {rule}\r\n//                             </label>\r\n//                           </div>\r\n//                         ))}\r\n//                         <button\r\n//                           type=\"button\"\r\n//                           className=\"btn btn-primary mt-3\"\r\n//                           onClick={handleCombineRules}\r\n//                         >\r\n//                           Combine Selected Rules\r\n//                         </button>\r\n//                       </form>\r\n//                     ) : (\r\n//                       <p>No rules available. Click the button to fetch rules.</p>\r\n//                     )}\r\n//                   </div>\r\n//                 )}\r\n\r\n//                 {activeTab === \"evaluate\" && (\r\n//                   <form>\r\n//                     <textarea className=\"form-control mb-3\" placeholder=\"Enter Data to Evaluate\"></textarea>\r\n//                     <button type=\"submit\" className=\"btn btn-primary\">Evaluate Rule</button>\r\n//                   </form>\r\n//                 )}\r\n//               </div>\r\n//               <div className=\"col-lg-3\"></div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Dashboard = () => {\r\n  const [activeTab, setActiveTab] = useState(\"create\");\r\n  const [rules, setRules] = useState([]);\r\n  const [selectedRules, setSelectedRules] = useState([]);\r\n  const [selectedRule, setSelectedRule] = useState(\"\");\r\n  const [rule, setRule] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [salary, setSalary] = useState(\"\");\r\n  const [experience, setExperience] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [output, setOutput] = useState(\"\");\r\n\r\n  const fetchRules = () => {\r\n    fetch(\"http://localhost:5556/getRules\")\r\n      .then((response) => response.json())\r\n      .then((rulesArray) => {\r\n        setRules(rulesArray);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching rules:\", error);\r\n      });\r\n  };\r\n\r\n  const handleRuleSelection = (rule) => {\r\n    if (selectedRules.includes(rule)) {\r\n      setSelectedRules(selectedRules.filter((r) => r !== rule));\r\n    } else {\r\n      setSelectedRules([...selectedRules, rule]);\r\n    }\r\n  };\r\n\r\n  const handleCombineRules = () => {\r\n    console.log(\"Combining rules:\", selectedRules);\r\n    alert(\"Rules combined successfully!\");\r\n  };\r\n\r\n  const validateRule = () => {\r\n    let valid = true;\r\n    let errorMessage = \"\";\r\n\r\n    if (rule.trim() === \"\") {\r\n      valid = false;\r\n      errorMessage = \"Rule cannot be empty.\";\r\n    } else if (rule.length < 50) {\r\n      valid = false;\r\n      errorMessage = \"Rule must be at least 50 characters long.\";\r\n    } else if (!/AND|OR/.test(rule)) {\r\n      valid = false;\r\n      errorMessage = \"Rule must contain at least one 'AND' or 'OR' operator.\";\r\n    }\r\n\r\n    if (!valid) {\r\n      setError(errorMessage);\r\n    } else {\r\n      setError(\"\");\r\n      submitRule();\r\n    }\r\n  };\r\n\r\n  const submitRule = () => {\r\n    const url = \"http://localhost:5556/submitRule\";\r\n    const newRule = { rule };\r\n\r\n    const postdata = {\r\n      headers: { \"Content-type\": \"application/json\" },\r\n      method: \"POST\",\r\n      body: JSON.stringify(newRule),\r\n    };\r\n\r\n    fetch(url, postdata)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        alert(\"Rule Added Successfully!\");\r\n        setRule(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error submitting rule:\", error);\r\n      });\r\n  };\r\n\r\n  const handleEvaluate = () => {\r\n    let hasError = false;\r\n\r\n    if (!age || isNaN(age)) {\r\n      setError(\"Age must be a valid number.\");\r\n      hasError = true;\r\n    } else if (!department) {\r\n      setError(\"Department is required.\");\r\n      hasError = true;\r\n    } else if (!salary || isNaN(salary)) {\r\n      setError(\"Salary must be a valid number.\");\r\n      hasError = true;\r\n    } else if (!experience || isNaN(experience)) {\r\n      setError(\"Experience must be a valid number.\");\r\n      hasError = true;\r\n    } else if (!selectedRule) {\r\n      setError(\"Please select a rule to evaluate.\");\r\n      hasError = true;\r\n    } else {\r\n      setError(\"\");\r\n    }\r\n\r\n    if (!hasError) {\r\n      const data = { age, department, salary, experience, rule: selectedRule };\r\n      fetch(\"http://localhost:5556/evaluateRule\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          setOutput(result.isEligible ? \"True (User is eligible)\" : \"False (User is not eligible)\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error evaluating rule:\", error);\r\n          setOutput(\"Error evaluating rule.\");\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (activeTab === \"evaluate\") {\r\n      fetchRules();\r\n    }\r\n  }, [activeTab]);\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"container\">\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-lg-12 text-center fs-1 fw-bold text-dark\">\r\n            Rules & Eligibility\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 p-5 text-center\">\r\n            <div className=\"btn-group\">\r\n              <button\r\n                className={`btn btn-outline-dark fw-bold ${activeTab === \"create\" ? \"active\" : \"\"}`}\r\n                onClick={() => setActiveTab(\"create\")}\r\n              >\r\n                Create Rule\r\n              </button>\r\n              <button\r\n                className={`btn btn-outline-dark fw-bold ${activeTab === \"combine\" ? \"active\" : \"\"}`}\r\n                onClick={() => {\r\n                  setActiveTab(\"combine\");\r\n                  fetchRules();\r\n                }}\r\n              >\r\n                Combine Rules\r\n              </button>\r\n              <button\r\n                className={`btn btn-outline-dark fw-bold ${activeTab === \"evaluate\" ? \"active\" : \"\"}`}\r\n                onClick={() => {\r\n                  setActiveTab(\"evaluate\");\r\n                  fetchRules();\r\n                }}\r\n              >\r\n                Evaluate Rules\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-5\">\r\n          <div className=\"container p-5 feedback-box\">\r\n            <div className=\"row\">\r\n              <h3 className=\"text-center\">\r\n                {activeTab === \"create\" && \"Create Rule\"}\r\n                {activeTab === \"combine\" && \"Combine Rules\"}\r\n                {activeTab === \"evaluate\" && \"Evaluate Rules\"}\r\n              </h3>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\"></div>\r\n              <div className=\"col-lg-6\">\r\n                {activeTab === \"create\" && (\r\n                  <form>\r\n                    <textarea\r\n                      className={`form-control  ${error ? \"is-invalid\" : \"\"}`}\r\n                      placeholder=\"Enter Rule\"\r\n                      value={rule}\r\n                      onChange={(e) => setRule(e.target.value)}\r\n                      style={{ borderColor: error ? \"red\" : \"\" }}\r\n                    ></textarea>\r\n                    {error && <small className=\"text-danger fst-italic bg-3\"><i>{error}</i></small>}\r\n                    <div className='text-center'>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary mt-3 bg-dark\"\r\n                        onClick={validateRule}\r\n                      >\r\n                        Create Rule\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                )}\r\n\r\n                {activeTab === \"combine\" && (\r\n                  <div>\r\n                    {rules.length > 0 ? (\r\n                      <form>\r\n                        {rules.map((rule, index) => (\r\n                          <div key={index} className=\"form-check\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"checkbox\"\r\n                              value={rule}\r\n                              onChange={() => handleRuleSelection(rule)}\r\n                            />\r\n                            <label className=\"form-check-label\">\r\n                              {rule}\r\n                            </label>\r\n                          </div>\r\n                        ))}\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary mt-3\"\r\n                          onClick={handleCombineRules}\r\n                        >\r\n                          Combine Selected Rules\r\n                        </button>\r\n                      </form>\r\n                    ) : (\r\n                      <p>No rules available. Click the button to fetch rules.</p>\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {activeTab === \"evaluate\" && (\r\n                  <form>\r\n                    {rules.length > 0 ? (\r\n                      <div>\r\n                        {rules.map((rule, index) => (\r\n                          <div key={index} className=\"form-check\">\r\n                            <input\r\n                              className=\"form-check-input\"\r\n                              type=\"radio\"\r\n                              name=\"rule\"\r\n                              value={rule}\r\n                              onChange={() => setSelectedRule(rule)}\r\n                            />\r\n                            <label className=\"form-check-label\">\r\n                              {rule}\r\n                            </label>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <p>No rules available. Click the button to fetch rules.</p>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3\">\r\n                      <label>Age:</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={age}\r\n                        onChange={(e) => setAge(e.target.value)}\r\n                        style={{ borderColor: error && !age ? \"red\" : \"\" }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                      <label>Department:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={department}\r\n                        onChange={(e) => setDepartment(e.target.value)}\r\n                        style={{ borderColor: error && !department ? \"red\" : \"\" }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                      <label>Salary:</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={salary}\r\n                        onChange={(e) => setSalary(e.target.value)}\r\n                        style={{ borderColor: error && !salary ? \"red\" : \"\" }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                      <label>Experience (Years):</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={experience}\r\n                        onChange={(e) => setExperience(e.target.value)}\r\n                        style={{ borderColor: error && !experience ? \"red\" : \"\" }}\r\n                      />\r\n                    </div>\r\n\r\n                    {error && <small className=\"text-danger fst-italic\"><i>{error}</i></small>}\r\n\r\n                    <div className=\"text-center\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary mt-3 bg-dark\"\r\n                        onClick={handleEvaluate}\r\n                      >\r\n                        Evaluate Rule\r\n                      </button>\r\n                    </div>\r\n\r\n                    {output && (\r\n                      <div className=\"alert alert-info mt-3\" role=\"alert\">\r\n                        <strong>Evaluation Result:</strong> {output}\r\n                      </div>\r\n                    )}\r\n                  </form>\r\n                )}\r\n              </div>\r\n              <div className=\"col-lg-3\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}